
--- To convert to TF serving ---
import tensorflow as tf
from tensorflow import keras

model = keras.models.load_model('./clothing-model.h5')

tf.saved_model.save(model, 'clothing-model')

-- Code to check the input and output tensor as the name 
saved_model_cli show --dir clothing-model --all

Result =>
signature_def['serving_default']:
  The given SavedModel SignatureDef contains the following input(s):
    inputs['input_8'] tensor_info:
        dtype: DT_FLOAT
        shape: (-1, 299, 299, 3)
        name: serving_default_input_8:0
  The given SavedModel SignatureDef contains the following output(s):
    outputs['dense_7'] tensor_info:
        dtype: DT_FLOAT
        shape: (-1, 10)
        name: StatefulPartitionedCall:0
  Method name is: tensorflow/serving/predict

serving_default - name
input_8 - input 
dense_7 - output


---- 
We can run the model (clothing-model) with the prebuilt docker image tensorflow/serving:2.7.0:

docker run -it --rm \
  -p 8500:8500 \
  -v $(pwd)/clothing-model:/models/clothing-model/1 \
  -e MODEL_NAME="clothing-model" \
  tensorflow/serving:2.7.0

Explanation
docker run -it --rm (to run the docker)
-p 8500:8500 (port mapping)
-v $(pwd)/clothing-model:/models/clothing-model/1 (volumn mapping of absolute model directory to model directory inside the docker image)
-e MODEL_NAME="clothing-model" (set environment variable for docker image)
tensorflow/serving:2.7.0 (name of the image to run)
Tensorflow uses specical serving called gRPC protocol which is optimized to use binary data format. We need to convert our prediction into protobuf


docker run -it --rm -p 8500:8500 -v $(pwd)/clothing-model:/models/clothing-model/1 -e MODEL_NAME="clothing-model" tensorflow/serving:2.7.0

---- Build only the model
docker build -t zoomcamp-10-model:xception-v4-001 -f image-model.dockerfile .

--- After
docker run -ti --rm \
> -p 8500:8500 \
> zoomcamp-10-model:xception-v4-001  => image we just built

---- Docker gateway
docker build -t zoomcamp-10-gateway:001 -f image-gateway.dockerfile .

docker run -ti --rm \
> -p 9696:9696 \
> zoomcamp-10-gateway:001  => image we just built
